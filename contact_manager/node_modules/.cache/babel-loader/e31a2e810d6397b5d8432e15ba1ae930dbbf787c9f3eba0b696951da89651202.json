{"ast":null,"code":"var _jsxFileName = \"/Users/redaelhadfi/Desktop/contact_manager/src/comp/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport AddContact from './AddContact';\nimport Header from './Header';\nimport ListContact from './ListContact';\nimport { v4 as uuid } from \"uuid\"; // to generate random id\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _JSON$parse;\n  const KEY_data = \"contacts\";\n  const [contacts, setContacts] = useState((_JSON$parse = JSON.parse(localStorage.getItem(KEY_data))) !== null && _JSON$parse !== void 0 ? _JSON$parse : []);\n  // const LOCAL_STORAGE_KEY=\"contacts\";\n  // const [contacts, setContacts] = useState(\n  //   localStorage.getItem(LOCAL_STORAGE_KEY) ?? []\n  // );\n\n  const addContactHandler = contact => {\n    console.log(contact);\n    setContacts([...contacts, {\n      id: uuid(),\n      ...contact\n    }]);\n  };\n  const removeContactHandler = id => {\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    }); //this function will return all the contacts except the one with the id that we passed in the function\n    setContacts(newContactList);\n  };\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    localStorage.setItem(KEY_data, JSON.stringify(contacts));\n  }, [contacts]);\n\n  // get data from local storage\n  useEffect(() => {\n    const data = localStorage.getItem(KEY_data);\n    if (data) {\n      setData(JSON.parse(data));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddContact, {\n      addContactHandler: addContactHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListContact, {\n      contacts: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"IP1/9opme1Nz7K2nPl/TgLGt0tM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","AddContact","Header","ListContact","v4","uuid","useState","useEffect","jsxDEV","_jsxDEV","App","_s","_JSON$parse","KEY_data","contacts","setContacts","JSON","parse","localStorage","getItem","addContactHandler","contact","console","log","id","removeContactHandler","newContactList","filter","data","setData","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/redaelhadfi/Desktop/contact_manager/src/comp/App.js"],"sourcesContent":["import React from 'react';\nimport AddContact from './AddContact';\nimport Header from './Header';\nimport ListContact from './ListContact';\nimport { v4 as uuid } from \"uuid\"; // to generate random id\nimport { useState,useEffect } from 'react';\n\nfunction App() {\n  const KEY_data = \"contacts\";\n  const [contacts, setContacts] = useState( JSON.parse(localStorage.getItem(KEY_data)) ?? []);\n  // const LOCAL_STORAGE_KEY=\"contacts\";\n  // const [contacts, setContacts] = useState(\n  //   localStorage.getItem(LOCAL_STORAGE_KEY) ?? []\n  // );\n\n  const addContactHandler = (contact) => {\n    console.log(contact);\n    setContacts([...contacts, { id: uuid(), ...contact }]);\n  }\n\n\n\n\n\n  const  removeContactHandler = (id) => {\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });  //this function will return all the contacts except the one with the id that we passed in the function\n    setContacts(newContactList);\n  }\n\n\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    localStorage.setItem(KEY_data, JSON.stringify(contacts));\n  }, [contacts]);\n\n// get data from local storage\n  useEffect(() => {\n    const data = localStorage.getItem(KEY_data);\n    if (data) {\n      setData(JSON.parse(data)); \n    }\n  }, []);\n\n\n  return (\n   <div className=\"ui container\"  > \n      <Header  />\n      <AddContact  addContactHandler={addContactHandler}/>\n      <ListContact contacts={contacts} />\n\n    </div>\n\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM,CAAC,CAAC;AACnC,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,WAAA;EACb,MAAMC,QAAQ,GAAG,UAAU;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,EAAAM,WAAA,GAAEI,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACN,QAAQ,CAAC,CAAC,cAAAD,WAAA,cAAAA,WAAA,GAAI,EAAE,CAAC;EAC3F;EACA;EACA;EACA;;EAEA,MAAMQ,iBAAiB,GAAIC,OAAO,IAAK;IACrCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpBN,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEU,EAAE,EAAEnB,IAAI,CAAC,CAAC;MAAE,GAAGgB;IAAQ,CAAC,CAAC,CAAC;EACxD,CAAC;EAMD,MAAOI,oBAAoB,GAAID,EAAE,IAAK;IACpC,MAAME,cAAc,GAAGZ,QAAQ,CAACa,MAAM,CAAEN,OAAO,IAAK;MAClD,OAAOA,OAAO,CAACG,EAAE,KAAKA,EAAE;IAC1B,CAAC,CAAC,CAAC,CAAE;IACLT,WAAW,CAACW,cAAc,CAAC;EAC7B,CAAC;EAID,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdW,YAAY,CAACY,OAAO,CAACjB,QAAQ,EAAEG,IAAI,CAACe,SAAS,CAACjB,QAAQ,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEhB;EACEP,SAAS,CAAC,MAAM;IACd,MAAMqB,IAAI,GAAGV,YAAY,CAACC,OAAO,CAACN,QAAQ,CAAC;IAC3C,IAAIe,IAAI,EAAE;MACRC,OAAO,CAACb,IAAI,CAACC,KAAK,CAACW,IAAI,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,oBACCnB,OAAA;IAAKuB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC1BxB,OAAA,CAACP,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACX5B,OAAA,CAACR,UAAU;MAAEmB,iBAAiB,EAAEA;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpD5B,OAAA,CAACN,WAAW;MAACW,QAAQ,EAAEA;IAAS;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhC,CAAC;AAGV;AAAC1B,EAAA,CAlDQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}