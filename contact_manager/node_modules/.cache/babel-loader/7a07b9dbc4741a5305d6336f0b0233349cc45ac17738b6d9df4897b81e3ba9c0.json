{"ast":null,"code":"var _jsxFileName = \"/Users/redaelhadfi/Desktop/contact_manager/src/comp/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport AddContact from './AddContact';\nimport Header from './Header';\nimport ListContact from './ListContact';\nimport { v4 as uuid } from \"uuid\"; // to generate random id\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _localStorage$getItem;\n  // const [contacts, setContacts] = useState([]);\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState((_localStorage$getItem = localStorage.getItem(LOCAL_STORAGE_KEY)) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : []);\n  const addContactHandler = contact => {\n    console.log(contact);\n    setContacts([...contacts, {\n      id: uuid(),\n      ...contact\n    }]);\n  };\n  const removeContactHandler = id => {\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    }); //this function will return all the contacts except the one with the id that we passed in the function\n    setContacts(newContactList);\n  };\n  useEffect(() => {\n    const retriveContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (retriveContacts) setContacts(retriveContacts);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddContact, {\n      addContactHandler: addContactHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListContact, {\n      contacts: contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"BJoSXFfgY8HsgulWAsbg5ybn3po=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","AddContact","Header","ListContact","v4","uuid","useState","useEffect","jsxDEV","_jsxDEV","App","_s","_localStorage$getItem","LOCAL_STORAGE_KEY","contacts","setContacts","localStorage","getItem","addContactHandler","contact","console","log","id","removeContactHandler","newContactList","filter","retriveContacts","JSON","parse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/redaelhadfi/Desktop/contact_manager/src/comp/App.js"],"sourcesContent":["import React from 'react';\nimport AddContact from './AddContact';\nimport Header from './Header';\nimport ListContact from './ListContact';\nimport { v4 as uuid } from \"uuid\"; // to generate random id\nimport { useState,useEffect } from 'react';\n\nfunction App() {\n  // const [contacts, setContacts] = useState([]);\n  const LOCAL_STORAGE_KEY=\"contacts\";\n  const [contacts, setContacts] = useState(\n    localStorage.getItem(LOCAL_STORAGE_KEY) ?? []\n  );\n\n  const addContactHandler = (contact) => {\n    console.log(contact);\n    setContacts([...contacts, { id: uuid(), ...contact }]);\n  }\n\n\n\n\n\n  const  removeContactHandler = (id) => {\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });  //this function will return all the contacts except the one with the id that we passed in the function\n    setContacts(newContactList);\n  }\n\n\n  useEffect(() => {\n    const retriveContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (retriveContacts) setContacts(retriveContacts);\n  }, []);\n\n  return (\n   <div className=\"ui container\"  > \n      <Header  />\n      <AddContact  addContactHandler={addContactHandler}/>\n      <ListContact contacts={contacts} />\n\n    </div>\n \n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM,CAAC,CAAC;AACnC,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACb;EACA,MAAMC,iBAAiB,GAAC,UAAU;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,EAAAM,qBAAA,GACtCI,YAAY,CAACC,OAAO,CAACJ,iBAAiB,CAAC,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,EAC7C,CAAC;EAED,MAAMM,iBAAiB,GAAIC,OAAO,IAAK;IACrCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpBJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEQ,EAAE,EAAEjB,IAAI,CAAC,CAAC;MAAE,GAAGc;IAAQ,CAAC,CAAC,CAAC;EACxD,CAAC;EAMD,MAAOI,oBAAoB,GAAID,EAAE,IAAK;IACpC,MAAME,cAAc,GAAGV,QAAQ,CAACW,MAAM,CAAEN,OAAO,IAAK;MAClD,OAAOA,OAAO,CAACG,EAAE,KAAKA,EAAE;IAC1B,CAAC,CAAC,CAAC,CAAE;IACLP,WAAW,CAACS,cAAc,CAAC;EAC7B,CAAC;EAGDjB,SAAS,CAAC,MAAM;IACd,MAAMmB,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACZ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IACpE,IAAIS,eAAe,EAAEX,WAAW,CAACW,eAAe,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACCjB,OAAA;IAAKoB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC1BrB,OAAA,CAACP,MAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACXzB,OAAA,CAACR,UAAU;MAAEiB,iBAAiB,EAAEA;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpDzB,OAAA,CAACN,WAAW;MAACW,QAAQ,EAAEA;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhC,CAAC;AAGV;AAACvB,EAAA,CAtCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}